//part of homework2  
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
typedef struct node *Polynomial;
struct node{
	int coef;
	int expon;
	Polynomial next;
};
Polynomial Add(Polynomial p1,Polynomial p2);
Polynomial Create(int n);
void Free(Polynomial L);
void Print(Polynomial L);
int main()
{
	int n1,n2;
	Polynomial L1,L2,L3; 
	scanf("%d%d",&n1,&n2);
	L1=Create(n1);
	printf("\n");
	L2=Create(n2);
	L3=Add(L1,L2);
	printf("\n");
	Print(L3);
	return 0;
}
Polynomial Create(int n)
{
	Polynomial p,q,s;
	int i;
	p=(Polynomial)malloc(sizeof(Polynomial));
	p->next=NULL;
	s=p;
	for(i=1;i<=n;i++)
	{
		q=(Polynomial)malloc(sizeof(Polynomial));
		q->coef=rand()%20+1;
		q->expon=rand()%5+1;     //生成<=5的指数，<=20的系数
		q->next=NULL;
		p->next=q;
		p=q;
	}
	Print(s);
	return s;
}
Polynomial Add(Polynomial p1,Polynomial p2)
{
	Polynomial s,q,temp,r; 
	s=p1;
	p2=p2->next;
	while(p2)
	{
		p1=s->next;
		while(p1)
		{
			if(p1->expon==p2->expon)  //指数相同系数相加
			{
				p1->coef+=p2->coef;
				p2=p2->next;
				break;
			}
			q=p1;
			p1=p1->next;
		}
		if(p1==NULL)            //无系数相同项，在p1后面插入p2
		{
			temp=p2->next;
			p2->next=NULL;
			q->next=p2;
			p2=temp;
		}
	}
	return s;
}
void Print(Polynomial L)
{
	L=L->next;
	while(L)
	{
		printf("%dx^%d ",L->coef,L->expon);
		L=L->next;
	}
}
		

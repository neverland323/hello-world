#include<stdio.h>
#include<stdlib.h>
#include<string.h>
const int Max=14;
struct node{
	char *card;
	int score;
	struct node *next;
};
typedef struct node *testee;
testee Create(testee L,int N);
void fun1(testee L,char *query);
void fun2(testee L,char *query);
void fun3(testee L,char *query);
void Print(testee L);
int main()
{
	int N,M,type,i;
	testee L;
	char query[7];
	scanf("%d%d",&N,&M);
	L=Create(L,N);
	for(i=1;i<=M;i++)
	{
		scanf("%d",&type);
		scanf("%s",query);
		printf("Case %d:%d %s\n",i,i,query);
		switch(type)
		{
		case 1:
			fun1(L,query);
			break;
		case 2:
			fun2(L,query);
			break;
		case 3:
			fun3(L,query);
			break;
		}
	}
	return 0;
}
testee Create(testee L,int N)
{
	testee p,g;
	char a[Max];
	int b;
	L=(testee)malloc(sizeof(testee));
	L->next=NULL;
	g=L;
	while(N--)
	{
		scanf("%s%d",a,&b);
		p=(testee)malloc(sizeof(testee));
		p->card=(char*)malloc(sizeof(char)*14);
		strcpy(p->card,a);
		p->score=b;
		p->next=NULL;
		L->next=p;
		L=p;
	}
	return g;
}
void fun1(testee L,char *query)    //³É¼¨½µÐòÅÅÐò
{
	testee p,h,s,g,temp;  
	char a[Max];
	h=L;
	p=h;
	L=L->next;
	while(L)
	{
		strncpy(a,L->card,1);
		a[1]='\0';
		if(strcmp(a,query)==0)
		{
			s=(testee)malloc(sizeof(testee));
			s->card=(char *)malloc(sizeof(char)*14);
			s->next=NULL;
			strcpy(s->card,L->card);
			s->score=L->score;
			p->next=s;
			p=s;
		}
		L=L->next;
	}
	p=h->next;
	temp=(testee)malloc(sizeof(testee));
	temp->card=(char *)malloc(sizeof(char)*14);
	temp->next=NULL;
	while(p)       //ÅÅÐò
	{
		g=p->next;
		while(g)
		{
			if(g->score>p->score)
			{
				strcpy(temp->card,p->card);
				temp->score=p->score;
				strcpy(p->card,g->card);
				p->score=g->score;
				strcpy(g->card,temp->card);
				g->score=temp->score;
			}
			else if(g->score==p->score)
			{
				if(strcmp(g->card,p->card)<0)
				{
					strcpy(temp->card,p->card);
					temp->score=p->score;
					strcpy(p->card,g->card);
					p->score=g->score;
					strcpy(g->card,temp->card);
					g->score=temp->score;
				}
			}
			g=g->next;
		}
		p=p->next;
	}
	Print(h);
}
void Print(testee L)
{
	testee p;
	p=L->next;
	while(p)
	{
		printf("%s %d\n",p->card,p->score);
		p=p->next;
	}
}
void fun2(testee L,char *query)
{

}
void fun3(testee L,char *query)
{

}
	
